.game-player {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  position: relative;
  overflow-x: hidden;
}

.game-player::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
  pointer-events: none;
}

.game-layout {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  gap: 48px;
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 80px 24px 48px;
  position: relative;
  z-index: 1;
}

.game-canvas-container {
  flex: 0 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  transform: perspective(1000px) rotateY(-2deg);
  transition: transform 0.3s ease;
}

.game-canvas-container:hover {
  transform: perspective(1000px) rotateY(0deg) scale(1.02);
}

.game-canvas {
  background: #fff;
  border-radius: 20px;
  box-shadow: 
    0 25px 50px rgba(0, 0, 0, 0.25),
    0 12px 24px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  width: 100%;
  max-width: 500px;
  height: auto;
  aspect-ratio: 1 / 1;
  display: block;
  border: 3px solid rgba(255, 255, 255, 0.2);
  backdrop-filter: blur(10px);
}

.game-rules {
  flex: 0 0 360px;
  background: rgba(255, 255, 255, 0.95);
  border-radius: 20px;
  box-shadow: 
    0 25px 50px rgba(0, 0, 0, 0.15),
    0 12px 24px rgba(0, 0, 0, 0.1);
  padding: 32px 28px;
  margin-left: 0;
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  transform: perspective(1000px) rotateY(2deg);
  transition: transform 0.3s ease;
  position: relative;
  overflow: hidden;
}

.game-rules::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, #667eea, #764ba2, #f093fb);
  border-radius: 20px 20px 0 0;
}

.game-rules:hover {
  transform: perspective(1000px) rotateY(0deg) translateY(-5px);
  box-shadow: 
    0 35px 70px rgba(0, 0, 0, 0.2),
    0 15px 30px rgba(0, 0, 0, 0.15);
}

.game-rules h3 {
  margin-top: 0;
  background: linear-gradient(135deg, #667eea, #764ba2);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-size: 1.6rem;
  font-weight: 700;
  margin-bottom: 20px;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  position: relative;
}

.game-rules h3::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 0;
  width: 50px;
  height: 3px;
  background: linear-gradient(90deg, #667eea, #764ba2);
  border-radius: 2px;
}

.game-rules ul {
  padding-left: 0;
  margin: 0;
  font-size: 1.1rem;
  color: #2d3748;
  list-style: none;
}

.game-rules li {
  margin-bottom: 14px;
  line-height: 1.6;
  padding-left: 24px;
  position: relative;
  transition: transform 0.2s ease, color 0.2s ease;
}

.game-rules li:hover {
  transform: translateX(4px);
  color: #667eea;
}

.game-rules li::before {
  content: 'âœ¨';
  position: absolute;
  left: 0;
  top: 0;
  font-size: 1rem;
  transition: transform 0.2s ease;
}

.game-rules li:hover::before {
  transform: scale(1.2) rotate(10deg);
}

@media (max-width: 768px) {
  .game-layout {
    flex-direction: column;
    align-items: center;
    gap: 32px;
    padding: 40px 16px 32px;
  }
  
  .game-canvas-container,
  .game-rules {
    transform: none;
  }
  
  .game-canvas-container:hover,
  .game-rules:hover {
    transform: none;
  }
  
  .game-rules {
    width: 100%;
    max-width: 500px;
    flex: none;
  }
  
  .game-canvas {
    max-width: 100%;
  }
}

@media (max-width: 480px) {
  .game-layout {
    padding: 24px 12px 24px;
    gap: 24px;
  }
  
  .game-rules {
    padding: 24px 20px;
  }
  
  .game-rules h3 {
    font-size: 1.4rem;
  }
  
  .game-rules li {
    font-size: 1rem;
  }
}
